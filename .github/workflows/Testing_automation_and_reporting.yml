name: Python CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10, 3.11]

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Step 3: Install Dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov

      # Step 4: Run Unit Tests
      - name: Run Unit Tests
        run: pytest tests/test_unit.py --junitxml=unit-test-results.xml --cov=.

      # Step 5: Run Integration Tests
      - name: Run Integration Tests
        run: pytest tests/test_integration.py --junitxml=integration-test-results.xml --cov=.

      # Step 6: Run E2E Tests
      - name: Run E2E Tests
        run: pytest tests/test_e2e.py --junitxml=e2e-test-results.xml --cov=.

      # Step 7: Upload Test Results
      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            unit-test-results.xml
            integration-test-results.xml
            e2e-test-results.xml

      # Step 8: Upload Coverage to Codecov
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          fail_ci_if_error: true
